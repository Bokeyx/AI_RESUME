CREATE TABLE USERS (
    USER_ID         VARCHAR2(36) PRIMARY KEY,
    EMAIL           VARCHAR2(255) NOT NULL,
    PASSWORD_HASH   VARCHAR2(255) NOT NULL,
    NAME            VARCHAR2(100) NOT NULL,
    CREATED_AT      TIMESTAMP     NOT NULL
);

-- RESUMES 테이블
CREATE TABLE RESUMES (
    RESUME_ID           VARCHAR2(36) PRIMARY KEY,
    RESUME_USER         VARCHAR2(36) NOT NULL,
    RAW_TEXT            CLOB         NOT NULL,
    PREDICTED_CATEGORY  VARCHAR2(100),
    SUBMITTED_AT        TIMESTAMP    NOT NULL,
    CONSTRAINT FK_RESUMES_USER FOREIGN KEY (RESUME_USER) REFERENCES USERS(USER_ID)
);

-- RESUME_ANALYSIS 테이블
CREATE TABLE RESUME_ANALYSIS (
    ANALYSIS_ID     VARCHAR2(36) PRIMARY KEY,
    ANALYSIS_RESUME VARCHAR2(36) NOT NULL,
    SKILLS          VARCHAR2(1000),
    EDUCATION       VARCHAR2(1000),
    EXPERIENCE      VARCHAR2(1000),
    CONSTRAINT FK_RESUME_ANALYSIS_RESUME FOREIGN KEY (ANALYSIS_RESUME) REFERENCES RESUMES(RESUME_ID)
);

-- ESSAYS 테이블
CREATE TABLE ESSAYS (
    ESSAY_ID        VARCHAR2(36) PRIMARY KEY,
    ESSAY_USER      VARCHAR2(36) NOT NULL,
    RAW_TEXT        CLOB         NOT NULL,
    SENTENCE_COUNT  NUMBER,
    WORD_COUNT      NUMBER,
    KEYWORDS_FOUND  VARCHAR2(500),
    POSITIVITY_SCORE FLOAT,
    FEEDBACK        VARCHAR2(2500),
    SUBMITTED_AT    TIMESTAMP,
    CONSTRAINT FK_ESSAYS_USER FOREIGN KEY (ESSAY_USER) REFERENCES USERS(USER_ID)
);

-- HISTORY_LOGS 테이블
CREATE TABLE HISTORY_LOGS (
    LOG_ID        VARCHAR2(36) PRIMARY KEY,
    LOG_USER      VARCHAR2(36) NOT NULL,
    LOG_RESUME    VARCHAR2(36),
    LOG_ESSAY     VARCHAR2(36),
    ACTION_TYPE   VARCHAR2(50) NOT NULL,
    ACTION_TIME   TIMESTAMP    NOT NULL,
    CONSTRAINT FK_HIS_USER   FOREIGN KEY (LOG_USER) REFERENCES USERS(USER_ID),
    CONSTRAINT FK_HIS_RESUME FOREIGN KEY (LOG_RESUME) REFERENCES RESUMES(RESUME_ID),
    CONSTRAINT FK_HIS_ESSAY  FOREIGN KEY (LOG_ESSAY) REFERENCES ESSAYS(ESSAY_ID)
);

-- essays 테이블 컬럼 추가
ALTER TABLE ESSAYS ADD CHAR_COUNT NUMBER;